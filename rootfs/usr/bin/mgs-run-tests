#!/bin/bash

ENVNAME="$1"
TESTSUITE="$2"
CHANGE_UID="$3"
CHANGE_GID="$4"

echo "$@"

until /usr/bin/healthcheck ; do
    sleep 2s
    echo "Waiting for services to come up..."
done

if [[ $# -ne 2 ]] && [[ $# -ne 4 ]]; then
    echo "Usage: $0 [env] [testsuite] <uid> <gid>"
    exit 20
fi

if [[ ! -z "$CHANGE_UID" ]] && [[ ! -z "$CHANGE_GID" ]] ; then
    if [[ $EUID -ne 0 ]]; then
        echo "Switching UID/GID is only possible from root user!" >&2
        exit 2
    fi

    echo "Starting sudo subshell with UID:$CHANGE_UID GID:$CHANGE_GID..."

    mgs-fix-perms
    mgs-switch-uid-gid "$CHANGE_UID" "$CHANGE_GID" $0 "$ENVNAME" "$TESTSUITE"

    exit 0
fi

set -e

function prepare_mysql() {
    echo "Preparing mysql..."
    cat <<ENDSQL | mysql -uroot
        DROP USER IF EXISTS '${DB_USER}'@'localhost';
        DROP USER IF EXISTS '${DB_USER}'@'%';

        CREATE USER '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASS}';
        CREATE USER '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASS}';
        GRANT ALL PRIVILEGES ON *.* TO '${DB_USER}'@'localhost' WITH GRANT OPTION;
        GRANT PROXY ON '${DB_USER}'@'%' TO '${DB_USER}'@'localhost' WITH GRANT OPTION;

        FLUSH PRIVILEGES;

        CREATE DATABASE IF NOT EXISTS ${DB_NAME};
ENDSQL
}

function clean() {
    rm -rf \
        /var/www/html/generated/* \
        /var/www/html/var/* \
        /var/www/html/dev/tests/integration/tmp/*
}

function run_unit() {
    echo "Starting unit tests..."
    clean
    mgs-fix-perms
    phing tests:unit -Denvname=${ENVNAME} -Dtestsuite=${TESTSUITE}
}

function run_integration() {
    echo "Starting integration tests..."
    clean
    mgs-fix-perms
    phing tests:integration -Denvname=${ENVNAME} -Dtestsuite=${TESTSUITE}
}

prepare_mysql

run_unit
run_integration
