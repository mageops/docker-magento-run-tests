#!/bin/bash

ENVNAME="$1"
TESTSUITE="$2"
CHANGE_UID="$3"
CHANGE_GID="$4"

echo "$@"

# Docker has the healthcheck built in but in case we run it as a service we need to wait
until /usr/bin/healthcheck ; do
    sleep 2s
    echo "Waiting for services to come up..."
done

if [[ $# -ne 2 ]] && [[ $# -ne 4 ]]; then
    echo "Usage: $0 [env] [testsuite] <uid> <gid>"
    exit 20
fi

if [[ ! -z "$CHANGE_UID" ]] && [[ ! -z "$CHANGE_GID" ]] ; then
    echo "Starting sudo subshell with UID:$CHANGE_UID GID:$CHANGE_GID..."
    sudo -E -u "$CHANGE_UID" -g "$CHANGE_GID" $0 "$ENVNAME" "$TESTSUITE"
    exit 0
fi

set -e

function prepare_mysql() {
    mysqlshow magento2_integration_tests 2>&1 > /dev/null && return 0
    mysql -uroot -h127.0.0.1 -e "CREATE USER 'creativestyle'@'%' IDENTIFIED BY 'brightSideOfLife'"
    mysql -uroot -h127.0.0.1 -e "GRANT ALL PRIVILEGES ON *.* TO 'creativestyle'@'%' WITH GRANT OPTION"
    mysql -uroot -h127.0.0.1 -e "CREATE DATABASE magento2_integration_tests"
}

function prepare_magento_temp() {
    REL="$1"
    SRC="/var/www/html$REL"
    DST="/tmp$SRC"

    [[ "$(readlink -f "$SRC")" != "$DST" ]] && return 0 || true

    rm -rf "$SRC"
    mkdir -p "$DST"
    ln -snvf "$DST" "$SRC"
}

function prepare_magento_temps() {
    prepare_magento_temp /var/cache
    prepare_magento_temp /var/log
    prepare_magento_temp /var/tmp
    prepare_magento_temp /generated
    prepare_magento_temp /dev/tests/integration/tmp
}

function clean() {
    rm -rf \
        /var/www/html/generated/* \
        /var/www/html/var/cache/* \
        /var/www/html/dev/tests/integration/tmp/*
}

function run_unit() {
    clean
    phing tests:unit -Denvname=${ENVNAME} -Dtestsuite=${TESTSUITE}
}

function run_integration() {
    clean
    phing tests:unit -Denvname=${ENVNAME} -Dtestsuite=${TESTSUITE}
}

prepare_mysql

# Mount temps in /tmp which should be mounted as tmpfs to improve perf
# and avoid polluting the host filesystem...
prepare_magento_temps

run_unit
run_integration
